{"version":3,"sources":["src/controllers/residualMatterController.ts"],"names":[],"mappings":"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","file":"residualMatterController.js","sourcesContent":["import { residualMatterRepository } from \"../repository/residualMatterRepository\";\r\nimport { TranslateUtils } from \"../utils/translateUtils\";\r\nimport { VisionUtils } from \"../utils/visionUtils\";\r\nimport { WASTETYPE } from \"../enums/wasteType\";\r\n\r\nclass ResidualMatterController {\r\n\r\n    public async getResidualMatter(express: any): Promise<void> {\r\n        const lavalResidual = await residualMatterRepository.getLavalResidualMaterialsAccepted();\r\n        express.res.status(200).send(lavalResidual);\r\n    }\r\n\r\n    public async postResidualMatterWord(express: any): Promise<any> {\r\n        let wasteType: WASTETYPE;\r\n        const word = express.params.word;\r\n\r\n        if (express.body.city === \"Sherbrooke\") {\r\n\r\n            const SherbookeResidual = await residualMatterRepository.getSherbrookeResidualMaterialsAccepted()\r\n                .catch(err => {\r\n                    console.log('error' + err);\r\n                });\r\n\r\n\r\n            for (let i = 0; i < SherbookeResidual.length; i++) {\r\n\r\n                if (SherbookeResidual[i]['MAT_NOM'] === null) { return };\r\n                if (SherbookeResidual[i]['MAT_NOM'].toLowerCase().includes(word.toLowerCase())) {\r\n                    if (SherbookeResidual[i][\"TYPE_COL\"].includes('O')) {\r\n                        wasteType = WASTETYPE.ECOCENTER;\r\n                    }\r\n                    else if (SherbookeResidual[i][\"TYPE_COL\"].includes('C')) {\r\n                        wasteType = WASTETYPE.ORGANIC;\r\n                    }\r\n                    else if (SherbookeResidual[i][\"TYPE_COL\"].includes('R')) {\r\n                        wasteType = WASTETYPE.RECYCLE;\r\n                    }\r\n                    else {\r\n                        wasteType = WASTETYPE.WASTE;\r\n                    }\r\n                }\r\n\r\n            }\r\n        } else {\r\n\r\n            const lavalResidual = await residualMatterRepository.getLavalResidualMaterialsAccepted()\r\n                .catch(err => {\r\n                    console.log('error' + err);\r\n                });\r\n\r\n\r\n            for (let i = 0; i < lavalResidual.length; i++) {\r\n\r\n                    if (lavalResidual[i].description === null) { \r\n                        return; \r\n                    };\r\n\r\n                    if (lavalResidual[i].description.toLowerCase().includes(word.toLowerCase())) {\r\n                        if (lavalResidual[i][\"nom-collecte\"].includes('matériaux') ||\r\n                            lavalResidual[i][\"nom-collecte\"].includes('domestiques') ||\r\n                            lavalResidual[i][\"nom-collecte\"].includes('autres matières')) {\r\n                            wasteType = WASTETYPE.ECOCENTER;\r\n                        }\r\n                        else if (lavalResidual[i][\"nom-collecte\"].includes('organiques')) {\r\n                            wasteType = WASTETYPE.ORGANIC;\r\n                        }\r\n                        else if (lavalResidual[i][\"nom-collecte\"].includes('recyclables')) {\r\n                            wasteType = WASTETYPE.RECYCLE;\r\n                        }\r\n                        else {\r\n                            wasteType = WASTETYPE.WASTE;\r\n                        }\r\n                    }\r\n\r\n            }\r\n\r\n            if (!wasteType) {\r\n                express.res.status(200).send(\"not found\");\r\n            }\r\n        }\r\n\r\n        express.res.status(200).send(wasteType);\r\n    }\r\n\r\n    public async postResidualMatterPicture(express: any): Promise<void> {\r\n\r\n        let englishWords: string[] = await VisionUtils.analysePicture(express.body.name);\r\n        englishWords = englishWords.slice(0, 6);\r\n        const frenchWords = await TranslateUtils.translate(englishWords);\r\n\r\n        let wasteType: WASTETYPE;\r\n\r\n\r\n        if (express.body.city === \"Sherbrooke\") {\r\n\r\n            const SherbookeResidual = await residualMatterRepository.getSherbrookeResidualMaterialsAccepted()\r\n                .catch(err => {\r\n                    console.log('error' + err);\r\n                });\r\n\r\n            let found = false;\r\n\r\n            for (let i = 0; i < SherbookeResidual.length; i++) {\r\n\r\n                if (found) {\r\n                    break;\r\n                }\r\n\r\n                frenchWords.forEach((word: string) => {\r\n                    if (SherbookeResidual[i]['MAT_NOM'] === null) { return };\r\n                    if (SherbookeResidual[i]['MAT_NOM'].toLowerCase().includes(word.toLowerCase())) {\r\n                        if (SherbookeResidual[i][\"TYPE_COL\"].includes('O')) {\r\n                            wasteType = WASTETYPE.ECOCENTER;\r\n                            found = true;\r\n                        }\r\n                        else if (SherbookeResidual[i][\"TYPE_COL\"].includes('C')) {\r\n                            wasteType = WASTETYPE.ORGANIC;\r\n                            found = true;\r\n                        }\r\n                        else if (SherbookeResidual[i][\"TYPE_COL\"].includes('R')) {\r\n                            wasteType = WASTETYPE.RECYCLE;\r\n                            found = true;\r\n                        }\r\n                        else {\r\n                            wasteType = WASTETYPE.WASTE;\r\n                            found = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        } else {\r\n\r\n            const lavalResidual = await residualMatterRepository.getLavalResidualMaterialsAccepted()\r\n                .catch(err => {\r\n                    console.log('error' + err);\r\n                });\r\n\r\n            let found = false;\r\n\r\n            for (let i = 0; i < lavalResidual.length; i++) {\r\n\r\n                if (found) {\r\n                    break;\r\n                }\r\n\r\n                frenchWords.forEach((word: string) => {\r\n                    if (lavalResidual[i].description === null) { return };\r\n                    if (lavalResidual[i].description.toLowerCase().includes(word.toLowerCase())) {\r\n                        if (lavalResidual[i][\"nom-collecte\"].includes('matériaux') ||\r\n                            lavalResidual[i][\"nom-collecte\"].includes('domestiques') ||\r\n                            lavalResidual[i][\"nom-collecte\"].includes('autres matières')) {\r\n                            wasteType = WASTETYPE.ECOCENTER;\r\n                            found = true;\r\n                        }\r\n                        else if (lavalResidual[i][\"nom-collecte\"].includes('organiques')) {\r\n                            wasteType = WASTETYPE.ORGANIC;\r\n                            found = true;\r\n                        }\r\n                        else if (lavalResidual[i][\"nom-collecte\"].includes('recyclables')) {\r\n                            wasteType = WASTETYPE.RECYCLE;\r\n                            found = true;\r\n                        }\r\n                        else {\r\n                            wasteType = WASTETYPE.WASTE;\r\n                            found = true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        express.res.status(200).send(wasteType);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport let residualMatterController: ResidualMatterController = new ResidualMatterController();"],"sourceRoot":"../.."}