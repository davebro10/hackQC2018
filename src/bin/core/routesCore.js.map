{"version":3,"sources":["src/bin/core/routesCore.ts"],"names":[],"mappings":";;AACA,4BAA4B;AAC5B,yCAA6C;AAC7C,4DAAyD;AAGzD;IAEI;;;OAGG;IACI,UAAU,CAAC,GAAqB;QACnC,sBAAa,CAAC,OAAO,CAAE,CAAC,KAAoB,EAAE,EAAE;YAE5C,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC;gBACzB,CAAC,CAAC,MAAM,CAAC,uBAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACjD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,IAAI,KAAK,CAAC,kCAAkC,KAAK,CAAC,MAAM,WAAW,KAAK,CAAC,IAAI,iBAAiB,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;YAC5H,CAAC;YAED,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAEY,QAAA,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC","file":"routesCore.js","sourcesContent":["import * as _express from 'express';\r\nimport * as _ from 'lodash';\r\nimport { routesHandler } from '../../routes';\r\nimport { HTTPMETHOD } from '../../enums/core/httpMethod';\r\nimport { IRouteHandler } from '../../interfaces/core/routeHandler';\r\n\r\nclass RoutesCore {\r\n\r\n    /**\r\n     * Map every route to the application\r\n     * @param app - The express application\r\n     */\r\n    public initRoutes(app: _express.Express): void {\r\n        routesHandler.forEach( (route: IRouteHandler) => {\r\n\r\n            if (_.isNil(route.controller) || \r\n                _.values(HTTPMETHOD).indexOf(route.method) === -1 ||\r\n                _.isNil(route.path)) {\r\n                throw new Error(`The paths is invalid - method: ${route.method}, path: ${route.path}, controller: ${route.controller}`);  \r\n            }\r\n\r\n            app[route.method](route.path, route.controller);\r\n        });\r\n    }\r\n}\r\n\r\nexport const routesCore: RoutesCore = new RoutesCore();"],"sourceRoot":"../../.."}