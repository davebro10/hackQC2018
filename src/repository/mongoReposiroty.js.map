{"version":3,"sources":["src/repository/mongoReposiroty.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6CAA0C;AAC1C,iCAAiC;AACjC,MAAM,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAG/C;IAAA;QAEY,SAAI,GAAW,eAAM,CAAC,OAAO,CAAC,IAAI,CAAC;QACnC,aAAQ,GAAW,eAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAE3C,QAAG,GAAW,aAAa,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,iCAAiC,CAAC;IAyCnG,CAAC;IAvCgB,IAAI;;YACb,mBAAmB;YACnB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,oBAAoB,EAAE,CAAC;YAEjD,6CAA6C;YAC7C,MAAM;iBACL,cAAc,CAAC,mBAAmB,CAAC;iBACnC,IAAI,CAAE,CAAC,OAAY,EAAE,EAAE;gBACxB,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBAE3C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,MAAM,CAAC,OAAO,CAAE,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC;iBACD,KAAK,CAAE,CAAC,GAAU,EAAE,EAAE;gBACvB,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAGY,IAAI;;YAEb,MAAM,IAAI,GAAG;gBACT,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,SAAS;aACtB,CAAA;YAED,MAAM,QAAQ,GAAQ,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEpD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;YACtD,CAAC;YAED,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YAEjC,MAAM,MAAM,GAAQ,MAAM,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAExB,CAAC;KAAA;CAEJ;AAEY,QAAA,eAAe,GAAoB,IAAI,eAAe,EAAE,CAAC","file":"mongoReposiroty.js","sourcesContent":["import { config } from \"../config/config\";\r\nimport * as mongo from \"mongodb\";\r\nconst vision = require('@google-cloud/vision');\r\n\r\n\r\nclass MongoRepository{\r\n\r\n    private user: string = config.mongoDB.user;\r\n    private password: string = config.mongoDB.password;\r\n\r\n    private url: string = `mongodb://${this.user}:${this.password}@ds211440.mlab.com:11440/hackqc`;\r\n\r\n    public async test() {\r\n        // Creates a client\r\n        const client = new vision.ImageAnnotatorClient();\r\n\r\n        // Performs label detection on the image file\r\n        client\r\n        .labelDetection('./les-bananes.jpg')\r\n        .then( (results: any) => {\r\n        const labels = results[0].labelAnnotations;\r\n\r\n        console.log('Labels:');\r\n        labels.forEach( (label: any) => console.log(label.description));\r\n        })\r\n        .catch( (err: Error) => {\r\n        console.error('ERROR:', err);\r\n        });        \r\n    }\r\n\r\n\r\n    public async post(): Promise<void> {\r\n\r\n        const user = {\r\n            fisrtName: 'tom',\r\n            lastName: 'McMurry'\r\n        }\r\n\r\n        const database: any = await mongo.connect(this.url);\r\n\r\n        if (!database) {\r\n            throw new Error('cannot connect to the database');\r\n        }\r\n \r\n        const db = database.db('hackqc');\r\n\r\n        const result: any = await db.collection('Users').insertOne(user);\r\n        console.log(result);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const mongoRepository: MongoRepository = new MongoRepository();"],"sourceRoot":"../.."}